//naukri.com
#include <bits/stdc++.h> 

// Time Complexity=O(4^n^2)
// space Complexity=O(n^2)

bool isSafe(int newx, int newy, vector < vector < int >> & arr,vector<vector<bool>>& vis, int n){
    if((newx>=0 && newx<n) && (newy>=0 && newy<n) && (vis[newx][newy]!=1) && (arr[newx][newy]==1) ){
        return true;
    }
    return false;
}

void solve(int x, int y, vector < vector < int >> & arr, int n, vector<string>& ans, vector<vector<bool>>& vis, string path ){
    if(x==n-1 && y==n-1){
        ans.push_back(path);
        return;
    }
    vis[x][y]=1;
    // down
    if(isSafe(x+1,y,arr,vis,n)){
        solve(x+1,y,arr,n,ans,vis,path+'D');
    }
    //left
    if(isSafe(x,y-1,arr,vis,n)){
        solve(x,y-1,arr,n,ans,vis,path+'L');
    } 
    // right
    if(isSafe(x,y+1,arr,vis,n)){
        solve(x,y+1,arr,n,ans,vis,path+'R');
    }
    // up
    if(isSafe(x-1,y,arr,vis,n)){
        solve(x-1,y,arr,n,ans,vis,path+'U');
    }
    vis[x][y]=0;
}

vector < string > searchMaze(vector < vector < int >> & arr, int n) {
    vector<string> ans;
    if(arr[0][0]==0){
        return ans;
    }
    vector<vector<bool>> visited(n,vector<bool>(n,0));
    string path="";

    solve(0,0,arr,n,ans,visited,path);
    return ans;
}
